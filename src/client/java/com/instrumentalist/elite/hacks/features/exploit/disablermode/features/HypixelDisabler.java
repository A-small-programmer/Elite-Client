package com.instrumentalist.elite.hacks.features.exploit.disablermode.features;

import com.instrumentalist.elite.events.features.*;
import com.instrumentalist.elite.hacks.features.exploit.disablermode.DisablerEvent;
import com.instrumentalist.elite.utils.ChatUtil;
import com.instrumentalist.elite.utils.IMinecraft;
import com.instrumentalist.elite.utils.move.MovementUtil;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.s2c.play.PlayerPositionLookS2CPacket;

public class HypixelDisabler implements DisablerEvent {

    @Override
    public String getName() {
        return "Hypixel";
    }

    public static boolean watchDogDisabled = false;
    public static boolean startDisabler = false;
    public static boolean stuckOnAir = false;
    public static int airStuckTicks = 0;
    public static int airTicks = 0;

    @Override
    public void onUpdate(UpdateEvent event) {
        if (IMinecraft.mc.player == null) return;

        if (!watchDogDisabled) {
            if (IMinecraft.mc.player.isOnGround())
                airTicks = 0;
            else airTicks++;

            if (stuckOnAir && airTicks >= 9)
                MovementUtil.stopMoving();
        }
    }

    @Override
    public void onMotion(MotionEvent event) {
        if (IMinecraft.mc.player == null) return;

        if (!watchDogDisabled) {
            if (startDisabler && IMinecraft.mc.player.isOnGround()) {
                IMinecraft.mc.player.jump();
                startDisabler = false;
                stuckOnAir = true;
            } else if (stuckOnAir && airTicks >= 9) {
                if (airTicks % 2 == 0)
                    event.z += 0.095;

                MovementUtil.setVelocityY(0.0);
            }
        }
    }

    @Override
    public void onTick(TickEvent event) {
    }

    @Override
    public void onSendPacket(SendPacketEvent event) {
    }

    @Override
    public void onReceivedPacket(ReceivedPacketEvent event) {
        if (IMinecraft.mc.player == null) return;

        Packet<?> packet = event.packet;

        if (!watchDogDisabled && stuckOnAir && packet instanceof PlayerPositionLookS2CPacket) {
            airStuckTicks++;
            if (airStuckTicks >= 20) {
                ChatUtil.printChat("Watchdog checks has disabled!");

                airStuckTicks = 0;
                airTicks = 0;
                stuckOnAir = false;

                watchDogDisabled = true;
            }
        }
    }

    @Override
    public void onWorld(WorldEvent event) {
        watchDogDisabled = false;
        stuckOnAir = false;
        airStuckTicks = 0;
        airTicks = 0;

        startDisabler = true;
    }
}